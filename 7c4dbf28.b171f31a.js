(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{63:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return d}));var r=n(2),a=n(6),i=(n(0),n(77)),s={id:"featureGenericCrudRest",title:"Generic CRUD Rest",sidebar_label:"Generic CRUD Rest"},c={unversionedId:"featureGenericCrudRest",id:"featureGenericCrudRest",isDocsHomePage:!1,title:"Generic CRUD Rest",description:"Introduction",source:"@site/docs/featureGenericCrudRest.md",slug:"/featureGenericCrudRest",permalink:"/docs/featureGenericCrudRest",editUrl:"https://github.com/yazilim-vip/spring-vip-wiki/blob/master/docs/featureGenericCrudRest.md",version:"current",sidebar_label:"Generic CRUD Rest",sidebar:"someSidebar",previous:{title:"Generic CRUD Service",permalink:"/docs/featureGenericCrudService"},next:{title:"Scheduled Tasks",permalink:"/docs/featureScheduledTask"}},l=[{value:"Introduction",id:"introduction",children:[]},{value:"REST Responses",id:"rest-responses",children:[]},{value:"Example Usage",id:"example-usage",children:[]}],o={rightToc:l};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"introduction"},"Introduction"),Object(i.b)("p",null,"Generic CRUD operations defined in service layer can be used in REST layer too. This can be achieved by extending a ",Object(i.b)("inlineCode",{parentName:"p"},"Rest Controller")," to these classes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"ARestRead: Read operation"),Object(i.b)("li",{parentName:"ul"},"ARestCru: Create, Read and Update operations"),Object(i.b)("li",{parentName:"ul"},"ARestCrud: Create, Read, Update and Delete operations")),Object(i.b)("p",null,"Note that default mappings "),Object(i.b)("h2",{id:"rest-responses"},"REST Responses"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"RestError"),Object(i.b)("li",{parentName:"ul"},"RestErrorResponse"),Object(i.b)("li",{parentName:"ul"},"RestResponse")),Object(i.b)("h2",{id:"example-usage"},"Example Usage"),Object(i.b)("p",null,"To use ",Object(i.b)("inlineCode",{parentName:"p"},"Generic CRUD Rest Controller")," feature you need following; \\\nLet's assume you have a table named as ",Object(i.b)("inlineCode",{parentName:"p"},"User")," on database. Then you need;"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Entity for User"),Object(i.b)("li",{parentName:"ol"},Object(i.b)("inlineCode",{parentName:"li"},"Generic CRUD Service")," for ",Object(i.b)("inlineCode",{parentName:"li"},"User")," entity.")),Object(i.b)("p",null,"Then select ",Object(i.b)("inlineCode",{parentName:"p"},"Generic Rest Controllr")," depending on your needs. If;"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"you need only read: ",Object(i.b)("inlineCode",{parentName:"li"},"ARestRead")),Object(i.b)("li",{parentName:"ol"},"you need need create, read and update: ",Object(i.b)("inlineCode",{parentName:"li"},"ARestCru")),Object(i.b)("li",{parentName:"ol"},"you need need create, read and update, delete: ",Object(i.b)("inlineCode",{parentName:"li"},"ARestCrud"))),Object(i.b)("p",null,"Sample:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"@Service\npublic class RestUser extends ARestCrud<User, Integer> {\n\n    private final IUserService  Generic CRUD Service ExampleuserService;\n\n    public UserServiceImpl(IUserService userService) {\n        this.userService = userService\n    }\n\n    @Override\n    protected ICrudService<User, Integer> getService() {\n        return userService;\n    }\n\n    @Override\n    protected Class<User> getClassOfEntity() {\n        return User.class;\n    }\n\n    ....\n}\n\n")))}d.isMDXComponent=!0}}]);